name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: api        
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: To skip sqlx install
      id: to-skip-sqlx
      shell: sh +e {0}
      run: |
        skip="false"
        if [ -x "$(command -v sqlx)" ] && [ "$(sqlx --version | awk '{print $NF}')" = 0.6.2 ]; then
          skip="true"
        fi
        echo "skip=$skip" >> "$GITHUB_OUTPUT"

    - name: Install sqlx
      if: ${{ steps.to-skip-sqlx.outputs.skip == 'false' }}
      run: cargo install sqlx-cli --force

    - name: Run migration
      run: sqlx migrate run

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: |
        make certs
        make gen_curve
        cargo test --verbose
